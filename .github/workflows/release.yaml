name: Release workflow

on:
  push:
    tags:
      - v[012].[0-9]+.[0-9]+ # https://help.github.com/es/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet

env:
  DOCKER_BUILD_ARCHS: "amd64"
  DOCKER_HUB_REPO: "docker.io/christiangda"
  GH_PACKAGE_REPO: "docker.pkg.github.com/christiangda/mq-to-db"
  GO_VERSION: 1.17

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test
        run: make test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Git Current Tag Version
        run: |
          echo ${{ env.GITHUB_REF }} | cut -d / -f 3

      - name: Git Version
        run: |
          git rev-parse --abbrev-ref HEAD

      - name: Git Revision
        run: |
          git rev-parse HEAD | tr -d '\040\011\012\015\n'

      - name: Git Branch
        run: |
          git rev-parse --abbrev-ref HEAD | tr -d '\040\011\012\015\n'

      - name: Git User
        run: |
          git config --get user.name | tr -d '\040\011\012\015\n'

      - name: Build Distribution Cross-Platform
        run: make build-dist

      - name: List Workspace Files
        run: tree .

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist/

  publish_docker_images:
    name: Publish Docker Images
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set id for github tag version
        id: get_tag
        run: echo ::set-output name=name::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Docker Version
        run: docker version

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist/

      - name: List Workspace Files
        run: tree .

      - name: Build Docker Images for docker hub
        run: make container-build CONTAINER_REPO=${{ env.DOCKER_HUB_REPO }} CONTAINER_ARCH=${{ env.DOCKER_BUILD_ARCHS }} GIT_VERSION=${{ steps.get_tag.outputs.name }}

      - name: Show Local Docker Images
        run: docker images

      - name: Logging in Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin

      - name: Publish Images in Docker Hub
        run: make container-publish-docker CONTAINER_REPO=${{ env.DOCKER_HUB_REPO }} CONTAINER_ARCH=${{ env.DOCKER_BUILD_ARCHS }} GIT_VERSION=${{ steps.get_tag.outputs.name }}

      # - name: Logging in GitHub Packages
      #   run: echo ${{ secrets.GH_TOKEN }} | docker login docker.pkg.github.com -u ${{ secrets.GH_USER }} --password-stdin

      # - name: Publish Images in GitHub Packages
      #   run: make container-publish-github CONTAINER_REPO=${{ env.DOCKER_HUB_REPO }} CONTAINER_ARCH=${{ env.DOCKER_BUILD_ARCHS }} GIT_VERSION=${{ steps.get_tag.outputs.name }}

  create_github_release:
    name: Create Github Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_github_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            See the file: CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            LICENSE
            dist/*
